@page "/"
@using Blazored.Dialog

<PageTitle>Blazored.Dialog</PageTitle>

<h1>Hello, Blazored.Dialog!</h1>

<p>This is the simplest implementation of Blazored Dialog.</p>
<ol>
    <li>Retrieve the IBlazoredDialogService from the CascadingBlazoredDialog</li>
    <li>Using the service, create a new BlazoredDialog</li>
    <li>Actions, such as <pre>_dialog.Open()</pre> and <pre>_dialog.Close()</pre> can now be performed</li>
</ol>

<dialog id="@_dialog.DialogId">
    <div class="header">
        <h4>Thanks for opening me!</h4>
    </div>
    <div class="body">
        <p>This is some text in a dialog, you could put whatever you like here!</p>
        <p>It's just HTML after all.</p>
    </div>
    <div class="footer">
        <button class="btn btn-secondary" @onclick="@(() => _dialog.Close())">
            Close
        </button>
    </div>
</dialog>

<button class="btn btn-primary" @onclick="@(() => _dialog.Show())">Show dialog</button>
<button class="btn btn-primary" @onclick="@(() => _dialog.ShowModal())">Show dialog as modal</button>

@code 
{
    [CascadingParameter] public IBlazoredDialogService DialogService { get; set; } = default!;
    private BlazoredDialog _dialog = default!;

    protected override void OnInitialized()
    {
        _dialog = DialogService.NewDialog("myDialog");
    }
}